apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ template "simple-go-server.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ template "simple-go-server.name" . }}
    app: {{ template "simple-go-server.name" . }}
    chart: {{ template "simple-go-server.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "simple-go-server.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "simple-go-server.name" . }}
        release: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.features.enableAzureStorage }}
          volumeMounts:
            - name: azure-key-vault
              mountPath: /kvmnt
              readOnly: true
          {{- end }}
          {{- if .Values.env }}
          env:
          {{- range $key, $value := .Values.env }}
            - name: {{ $key }}
              value: {{ $value | quote }}
          {{- end }}
          {{- end }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /ping
              port: http
          readinessProbe:
            httpGet:
              path: /ping
              port: http
          resources:
{{ toYaml .Values.resources | indent 12 }}
      {{- if .Values.features.enableAzureStorage }}
      volumes:
        - name: azure-key-vault
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              providerName: "azure"
              usePodIdentity: "false"
              keyvaultName: {{ .Values.secretStore.csi.volumeAttributes.keyvaultName }}
              tenantId: {{ .Values.secretStore.csi.volumeAttributes.tenantId }}
              objects:  |
                array:
                {{- range $objectName, $objectType := .Values.secretStore.csi.volumeAttributes.objects }}
                  - |
                    objectName: {{ $objectName }}
                    objectType: {{ $objectType }}
                {{- end }}
            nodePublishSecretRef:
              name: {{ .Values.secretStore.csi.nodePublishSecretRef.name }}
      {{- end }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
